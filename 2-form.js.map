{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["// оголошую об'єк formData з ключами які мають початкове значення порожній рядок.Ці ключі відповідають полям форми.В цьому об'єкті будут зберігатися значення які вводить користувач\nconst formData = {\n  email: '',\n  message: '',\n};\n\n//знаходжу форму за домомогою селектора класу feedback-form \n  const form = document.querySelector('.feedback-form');\n\n//Створюю функцію для перевірки наявності форми. Якщо форма не буде знайдена виконання функціі прервется і код нне буде виконан\n  function checkForm() {\n  console.log('Форма знайдена', form);\n  if (!form) {\n    console.error('Форма з классом feedback-form не знайдена!');\n    return;\n  }\n}\ncheckForm();\n\n// створюю змінну ключ для зберігання данних у localStorage\n  const STORAGE_KEY = 'feedback-form-state';\n\n//створюю функцію для заполнения форми данними з localStorage\n  function populateFormFromStorage() {\n    \n//отримую данні з локального сховища в  змінну\n  const savedLSData = localStorage.getItem(STORAGE_KEY);\n\n//Якщо данні існують парсимо іх із JSON і оновлюємо об'єкт formData та поля форм.\n  if (savedLSData) {\n    console.log('Знайдено данні у локальному сховищі:', savedLSData);\n\n    // парсимо данні із JSON у JS-об'єкт\n    const parsedData = JSON.parse(savedLSData);\n\n    // оновлюю данні в полі email або залишаю порожнім\n    formData.email = parsedData.email || '';\n\n    //оновлюю данні в полі message або залишаю порожнім\n    formData.message = parsedData.message || '';\n\n    //заповнюєм поля form значенням з об'єкта formData\n    form.elements.email.value = formData.email;\n    form.elements.message.value = formData.message;\n\n    //перевіряємо заповнення форм\n    console.log('Форма заповнена з локального сховища:', formData);\n  } else {\n    console.log('Локальне сховище порожне.Поля лишаються порожні');\n  }\n}\n\n//викликаю функцію\n  populateFormFromStorage();\n\n//додаю обробника подіі 'input' до форми\n  form.addEventListener('input', evt => {\n    \n/*отримую елемент на якому сталася подія, evt.target вказує на якому елементі це сталося(input textarea)*/\n  const { name, value } = evt.target;\n\n//перевіряємо подію input\n  console.log(`Подія input: Поле - ${name}, Знaчення - ${value}`);\n\n/*перевіряю чи має елемент атрібут \"name\".Для того щоб працювати з очікуваними елементами форми*/\n  if (!name) {\n    \n// перевіряємо\n  console.log('Елемент не має отрібута name- пропускаємо ');\n    return;\n    }\n    \n//оновлюємо необхідне поле в об'єкті formData.Якщо це email оновлюеться formData.email\n  formData[name] = value;\n    \n//перевіряємо актуальний стан formData\n  console.log('Оновлено formData:', formData);\n\n/*Зберігаю актуальний стан об'єкта на localStorage. Так як localStorage зберігає тільки рядки перетворюжмо об'єкт на JSON- */\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(formData));\n\n//перевіряємо\n  console.log('Оновлено formData:', formData);\n\n  //перевіряємо збереження на localStorage\n  // console.log(\"formData збережено на localStorage\")\n  });\n\n// додаємо обробник подіі на 'Sabmit'для перевірки полів та очіщення форми\n  form.addEventListener('submit', evt => {\n\n//виключаю перезавантаження сторінки після надсилання форми\n  evt.preventDefault();\n    \n// перевіряю чі всі поля заповнені\n  if (!formData.email || !formData.message) {\n    alert('Fill please all fields');\n    console.log('Заповніть усі поля перед відправленням');\n    return;\n    }\n    \n// якщо всі поля заповнені\n  console.log('Форма відправлена :', formData);\n\n//очищення локального сховища\n  localStorage.removeItem(STORAGE_KEY);\n    \n//очищення поля форми та об'єкта formData\n  form.reset();\n  formData.email = '';\n  formData.message = '';\n//перевіряємо\n  console.log('Локальне сховище очищено.Поля форми скинуто');\n});\n"],"names":["formData","form","checkForm","STORAGE_KEY","populateFormFromStorage","savedLSData","parsedData","evt","name","value"],"mappings":"wFACA,MAAMA,EAAW,CACf,MAAO,GACP,QAAS,EACX,EAGQC,EAAO,SAAS,cAAc,gBAAgB,EAGpD,SAASC,GAAY,CAErB,GADA,QAAQ,IAAI,iBAAkBD,CAAI,EAC9B,CAACA,EAAM,CACT,QAAQ,MAAM,4CAA4C,EAC1D,MACD,CACH,CACAC,IAGE,MAAMC,EAAc,sBAGpB,SAASC,GAA0B,CAGnC,MAAMC,EAAc,aAAa,QAAQF,CAAW,EAGpD,GAAIE,EAAa,CACf,QAAQ,IAAI,uCAAwCA,CAAW,EAG/D,MAAMC,EAAa,KAAK,MAAMD,CAAW,EAGzCL,EAAS,MAAQM,EAAW,OAAS,GAGrCN,EAAS,QAAUM,EAAW,SAAW,GAGzCL,EAAK,SAAS,MAAM,MAAQD,EAAS,MACrCC,EAAK,SAAS,QAAQ,MAAQD,EAAS,QAGvC,QAAQ,IAAI,wCAAyCA,CAAQ,CACjE,MACI,QAAQ,IAAI,iDAAiD,CAEjE,CAGEI,IAGAH,EAAK,iBAAiB,QAASM,GAAO,CAGtC,KAAM,CAAE,KAAAC,EAAM,MAAAC,GAAUF,EAAI,OAM5B,GAHA,QAAQ,IAAI,uBAAuBC,CAAI,gBAAgBC,CAAK,EAAE,EAG1D,CAACD,EAAM,CAGX,QAAQ,IAAI,4CAA4C,EACtD,MACC,CAGHR,EAASQ,CAAI,EAAIC,EAGjB,QAAQ,IAAI,qBAAsBT,CAAQ,EAG1C,aAAa,QAAQG,EAAa,KAAK,UAAUH,CAAQ,CAAC,EAG1D,QAAQ,IAAI,qBAAsBA,CAAQ,CAI5C,CAAG,EAGDC,EAAK,iBAAiB,SAAUM,GAAO,CAMvC,GAHAA,EAAI,eAAc,EAGd,CAACP,EAAS,OAAS,CAACA,EAAS,QAAS,CACxC,MAAM,wBAAwB,EAC9B,QAAQ,IAAI,wCAAwC,EACpD,MACC,CAGH,QAAQ,IAAI,sBAAuBA,CAAQ,EAG3C,aAAa,WAAWG,CAAW,EAGnCF,EAAK,MAAK,EACVD,EAAS,MAAQ,GACjBA,EAAS,QAAU,GAEnB,QAAQ,IAAI,6CAA6C,CAC3D,CAAC"}