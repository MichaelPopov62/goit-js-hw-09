{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["\n\n// оголошую об'єк formData з ключами які мають початкове значення порожній рядок.Ці ключі відповідають полям форми.В цьому об'єкті будут зберігатися значення які вводить користувач \nconst formData = {\n  email: \"\",\n  message: \"\",\n  \n};\n//знаходжу форму за домомогою селектора класу feedback-form а також textarea\nconst form = document.querySelector('.feedback-form');\n\n\n\n\n//Створюю функцію для перевірки наявності форми. Якщо форма не буде знайдена виконання функціі прервется і код нне буде виконан\nfunction checkForm() {\n\n  console.log(\"Форма знайдена\", form);\n  if (!form) {\n    console.error('Форма з классом feedback-form не знайдена!');\n    return;\n  }\n}\ncheckForm();\n\n\n// створюю змінну ключ для зберігання данних у localStorage\nconst STORAGE_KEY = 'feedback-form-state';\n\n//створюю функцію для заполнения форми з localStorage\nfunction populateFormFromStorage() {\n\n   //отримую данні з локального сховища в окрему змінну\n  const savedLSData = localStorage.getItem(STORAGE_KEY);\n  \n   //якщо данні є то оновлюємо форму та об'єкт formData\n  if (savedLSData) {\n    console.log(\"Знайдено данні у локальному сховищі:\", savedLSData);\n    // створюю змінну для парсінга із JSON\n    const parsedData = JSON.parse\n      (savedLSData);\n    // встановлюю є збереженні данні в полі email або залишаємо порожнім \n    formData.email = parsedData.email || \"\";\n    //встановлюю є збереженні данні в полі message або залишаємо порожнім \n    formData.message = parsedData.message || \"\";\n    //заповнюєм поля form\n    form.elements.email.value = formData.email;\n    form.elements.message.value = formData.message;\n    //перевіряємо\n    console.log('Форма заповнена з локального сховища:', formData);\n  }\n  else {\n    console.log('Локальне сховище порожне.Поля лишаються порожні');\n  }    \n}\n//викликаю функцію\npopulateFormFromStorage();\n\n//додаю обробника подіі 'input' до форми\nform.addEventListener(\"input\", (evt) => {\n  /*отримую елемент на якому сталася подія, evt.target вказує на якому елементі це сталося(input textarea)*/\n  const { name, value } = evt.target;\n\n  //перевіряємо подію input\n  console.log(`Подія input: Поле - ${name}, Знвчення - ${value}`);\n\n  /*перевіряю чи має елемент атрібут \"name\".Для того щоб працювати з очікуваними елементами форми*/\n  if (!name) {\n    // перевіряємо\n    console.log('Елемент не має отрібута name- пропускаємо ');\n    return;\n  }\n  /*оновлюємо необхідне поле в об'єкті formData.Якщо це email оновлюеться formData.email*/\n  formData[name] = value;\n  //перевіряємо актуальний стан formData\n  console.log('Оновлено formData:', formData);\n\n  /*Зберігаю актуальний стан об'єкта на localStorage. Так як localStorage зберігає тільки рядки перетворюжмо об'єкт на JSON- */\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(formData));\n  //перевіряємо \n  console.log('Оновлено formData:', formData);\n  //перевіряємо збереження на localStorage\n  // console.log(\"formData збережено на localStorage\")\n});\n// додаємо обробник подіі на 'Sabmit'для перевірки полів та очіщення форми\nform.addEventListener(\"submit\", (evt) => {\n  //виключаю перезавантаження сторінки після надсилання форми\n  evt.preventDefault();\n  // перевіряю чі всі поля заповнені\n  if (!formData.email || !formData.message)\n{\n  alert('Fill please all fields');\n  console.log(\"Заповніть усі поля перед відправленням\");\n  return;\n  }\n// якщо всі поля заповнені\nconsole.log('Форма відправлена :', formData);\n//очищення локального сховища\nlocalStorage.removeItem(STORAGE_KEY);\n//очищення поля форми та об'єкта formData\nform.reset();\nformData.email = \"\";\nformData.message = \"\";\n//перевіряємо\nconsole.log('Локальне сховище очищено.Поля форми скинуто');\n});\n\n  \n\n\n  \n\n"],"names":["formData","form","checkForm","STORAGE_KEY","populateFormFromStorage","savedLSData","parsedData","evt","name","value"],"mappings":"wFAGA,MAAMA,EAAW,CACf,MAAO,GACP,QAAS,EAEX,EAEMC,EAAO,SAAS,cAAc,gBAAgB,EAMpD,SAASC,GAAY,CAGnB,GADA,QAAQ,IAAI,iBAAkBD,CAAI,EAC9B,CAACA,EAAM,CACT,QAAQ,MAAM,4CAA4C,EAC1D,MACD,CACH,CACAC,IAIA,MAAMC,EAAc,sBAGpB,SAASC,GAA0B,CAGjC,MAAMC,EAAc,aAAa,QAAQF,CAAW,EAGpD,GAAIE,EAAa,CACf,QAAQ,IAAI,uCAAwCA,CAAW,EAE/D,MAAMC,EAAa,KAAK,MACrBD,CAAW,EAEdL,EAAS,MAAQM,EAAW,OAAS,GAErCN,EAAS,QAAUM,EAAW,SAAW,GAEzCL,EAAK,SAAS,MAAM,MAAQD,EAAS,MACrCC,EAAK,SAAS,QAAQ,MAAQD,EAAS,QAEvC,QAAQ,IAAI,wCAAyCA,CAAQ,CAC9D,MAEC,QAAQ,IAAI,iDAAiD,CAEjE,CAEAI,IAGAH,EAAK,iBAAiB,QAAUM,GAAQ,CAEtC,KAAM,CAAE,KAAAC,EAAM,MAAAC,GAAUF,EAAI,OAM5B,GAHA,QAAQ,IAAI,uBAAuBC,CAAI,gBAAgBC,CAAK,EAAE,EAG1D,CAACD,EAAM,CAET,QAAQ,IAAI,4CAA4C,EACxD,MACD,CAEDR,EAASQ,CAAI,EAAIC,EAEjB,QAAQ,IAAI,qBAAsBT,CAAQ,EAG1C,aAAa,QAAQG,EAAa,KAAK,UAAUH,CAAQ,CAAC,EAE1D,QAAQ,IAAI,qBAAsBA,CAAQ,CAG5C,CAAC,EAEDC,EAAK,iBAAiB,SAAWM,GAAQ,CAIvC,GAFAA,EAAI,eAAc,EAEd,CAACP,EAAS,OAAS,CAACA,EAAS,QACnC,CACE,MAAM,wBAAwB,EAC9B,QAAQ,IAAI,wCAAwC,EACpD,MACC,CAEH,QAAQ,IAAI,sBAAuBA,CAAQ,EAE3C,aAAa,WAAWG,CAAW,EAEnCF,EAAK,MAAK,EACVD,EAAS,MAAQ,GACjBA,EAAS,QAAU,GAEnB,QAAQ,IAAI,6CAA6C,CACzD,CAAC"}